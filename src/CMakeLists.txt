cmake_minimum_required( VERSION 2.6 FATAL_ERROR )

PROJECT(CUDA CXX C)
SET(CMAKE_MODULE_PATH  ${CMAKE_MODULE_PATH} ${CMAKE_SOURCE_DIR}/CMakeModules )

INCLUDE(InstallRequiredSystemLibraries)

SET(CPACK_SOURCE_GENERATOR "TGZ")
SET(CPACK_PACKAGE_NAME "cuv-library")
SET(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Matrix Algorithms on GPU")
SET(CPACK_PACKAGE_CONTACT "Hannes Schulz <schulz@ais.uni-bonn.de>")
SET(CPACK_PACKAGE_DESCRIPTION_FILE "${CMAKE_CURRENT_SOURCE_DIR}/../README")
SET(CPACK_PACKAGE_VERSION_MAJOR "0")
SET(CPACK_PACKAGE_VERSION_MINOR "1")
SET(CPACK_PACKAGE_VERSION_PATCH "0")
SET(CPACK_SOURCE_IGNORE_FILES "${CPACK_SOURCE_IGNORE_FILES};cfg/config.h")
SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMake ${CMake_VERSION_MAJOR}.${CMake_VERSION_MINOR}")
SET(CPACK_DEBIAN_PACKAGE_DEPENDS "libboost-dev (>= 1.34.1)" )
INCLUDE(CPack)

OPTION(CUDA_SHARED "Whether shared version of CUDA is to be used, must be true for python bindings!" ON)
IF(CUDA_SHARED)
#	use this for python bindings. However, We need to recompile CUDA for this on every computer!
	SET(CMAKE_CXX_FLAGS "-fPIC") # for FindCUDA, needed for python shared lib
	SET(CUDA_SDK_ROOT_DIR "/usr/local/src/cuda_shared" CACHE STRING "Location of CUDA SDK") 
ELSE(CUDA_SHARED)
	SET(CUDA_SDK_ROOT_DIR "/usr/local/src/cuda" CACHE STRING "Location of CUDA SDK")
ENDIF(CUDA_SHARED)

FIND_PACKAGE(CUDA)
FIND_PACKAGE(CxxTest)

CUDA_INCLUDE_DIRECTORIES( ${CUDA_CUT_INCLUDE_DIR} ${CMAKE_CURRENT_SOURCE_DIR}  tools )
INCLUDE_DIRECTORIES(      ${CUDA_CUT_INCLUDE_DIR} ${CUDA_INCLUDE_DIRS}         tools )

add_subdirectory(basics)

CUDA_BUILD_CLEAN_TARGET()


